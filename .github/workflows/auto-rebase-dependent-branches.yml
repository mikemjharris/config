name: Auto-rebase dependent branches

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  rebase-dependent-branches:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Find and rebase dependent branches
        env:
          MERGED_BRANCH: ${{ github.event.pull_request.head.ref }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get all branches
          git fetch --all

          # Find branches that have the merged branch in their history
          for branch in $(git branch -r | grep -v HEAD | grep -v main | sed 's/origin\///'); do
            # Check if this branch contains commits from the merged branch
            if git merge-base --is-ancestor origin/$MERGED_BRANCH origin/$branch 2>/dev/null; then
              echo "Found dependent branch: $branch"

              # Rebase onto main
              git checkout $branch
              git rebase --onto main origin/$MERGED_BRANCH || {
                echo "Rebase conflict on $branch - creating issue"
                gh issue create --title "Manual rebase needed for $branch" \
                  --body "Branch $branch needs manual rebase after $MERGED_BRANCH was merged"
                git rebase --abort
                continue
              }

              git push origin $branch --force-with-lease
            fi
          done
